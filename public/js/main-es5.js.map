{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/post-dialog/post-dialog.component.ts","webpack:///src/app/post-dialog/post-dialog.component.html","webpack:///src/app/post.service.ts","webpack:///src/app/post.ts","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","dialog","postService","title","posts","dialogRef","open","width","afterClosed","subscribe","result","salvar","post","arquivo","openDialog","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","entryComponents","bootstrap","PostDialogComponent","dialogref","nomearquivo","dados","event","target","files","name","close","mudouarquivo","cancelar","PostService","http","get","p","push","nome","titulo","subtitulo","email","mensagem","likes","file","uploadData","FormData","append","reportProgress","observe","type","Response","body","UploadProgress","console","log","find","delete","i","findIndex","splice","Post","PostComponent","like","apagar","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'app';\n  public posts: Post[];\n   \n\n  constructor(\n    public dialog: MatDialog,\n    private postService: PostService){}\n  \n  ngOnInit() {\n    this.posts = this.postService.posts\n  }\n  \n  openDialog() {\n    const dialogRef = this.dialog.open(PostDialogComponent, {\n      width: '600px'\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if (result) {\n          this.postService.salvar(result.post, result.arquivo);\n        }\n      }\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>Projeto: Laravel + Angular</span>\n</mat-toolbar>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\" >\n  <app-post *ngFor=\"let p of posts\" [post]=\"p\" ></app-post>\n</div>\n\n\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\n  <mat-icon>add</mat-icon>\n</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n  providers: [\n    PostService\n  ],\n\n  entryComponents : [\n    PostDialogComponent\n  ],\n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  public nomearquivo: string= '';\n\n  public dados = {\n    post: new Post(\"\", \"\", \"\", \"\", \"\", \"\"),\n    arquivo: null\n  }\n\n  constructor(\n    public dialogref: MatDialogRef<PostDialogComponent>) { }\n\n  ngOnInit() {\n  }\n\n  mudouarquivo(event) {\n    //console.log(event.target.files[0]);\n    this.nomearquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar() {\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar() {\n    this.dialogref.close(null);\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu nome\" [(ngModel)]=\"dados.post.nome\">\n            <mat-hint>Digite aqui seu nome</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu email\" [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite aqui seu email</mat-hint>\n        </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Titulo da mensagem\" [(ngModel)]=\"dados.post.titulo\">\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Subtitulo da mensagem\" [(ngModel)]=\"dados.post.subtitulo\">\n        </mat-form-field>\n    </div>\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe aqui sua mensagem\" [(ngModel)]=\"dados.post.mensagem\"></textarea> \n    </mat-form-field>\n</div>\n\n<input type=\"file\" style=\"display:none;\" (change)=\"mudouarquivo($event)\"#fileinput>\n\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n    Adicionar uma Foto\n</button>\n<p *ngIf=\"nomearquivo!=''\"><strong>Arquivo: </strong>{{nomearquivo}}\n    <mat-icon color=\"primary\">done</mat-icon>\n</p>\n\n<br><br>\n\n<div style=\"text-align: center;\">\n    <button mat-button color=\"primary\" (click)=\"salvar()\">OK</button>\n    <button mat-button color=\"warn\" (click)=\"cancelar()\">Cancelar</button>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable()\nexport class PostService {\n\n  public posts: Post[] = [];\n  \n  constructor(private http: HttpClient) { \n    this.http.get(\"/api/\").subscribe(\n      (posts: any[]) => {\n        for(let p of posts) {\n          this.posts.push(\n            new Post(\n              p.nome,p.titulo,p.subtitulo,p.email,p.mensagem,p.arquivo,p.id,p.likes\n            )\n          );\n          \n        }\n      }\n    );\n  }\n\n  salvar(post: Post, file: File) {\n    const uploadData = new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('email', post.email);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n\n    this.http.post(\"/api\", uploadData, { reportProgress: true, observe: 'events'})\n      .subscribe((event: any) => {\n        if (event.type == HttpEventType.Response) {\n          //console.log(event);\n          let p: any = event.body;\n          this.posts.push(\n            new Post(\n              p.nome,p.titulo,p.subtitulo,p.email,p.mensagem,p.arquivo,p.id,p.likes\n            )\n          );\n        }\n        if (event.type == HttpEventType.UploadProgress) {\n          console.log('UploadProgress');\n          console.log(event);\n        }\n      })\n    \n  }\n\n  like(id: number) {\n    this.http.get('api/like/' + id)\n      .subscribe(\n        (event: any) => {\n         let p = this.posts.find((p) => p.id == id);\n         p.likes = event.likes;\n        }\n      );\n  }\n\n  apagar(id: number) {\n    this.http.delete(\"/api/\" + id)\n      .subscribe( (event) => {\n        console.log(event);\n        let i = this.posts.findIndex((p) => p.id == id);\n        if (i >=0)\n        this.posts.splice(i,1)\n    });\n\n  }\n\n}\n","export class Post {\r\n    constructor(\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number, \r\n    ) {}\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor(\n    private postService: PostService) { }\n    \n\n  ngOnInit() {\n  }\n\n  like() {\n    this.postService.like(this.post.id);\n\n  }\n\n  apagar() {\n    this.postService.apagar(this.post.id);\n  }\n\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n      <div mat-card-avatar></div>\n      <mat-card-title>{{post.titulo}}</mat-card-title>\n      <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"/storage/{{post.arquivo}}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n        {{post.mensagem}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button color=\"primary\" (click)=\"like()\">LIKE</button>\n      <button mat-button color=\"accent\" (click)=\"apagar()\">DELETE</button>\n      <mat-icon color=\"warn\" *ngIf=\"post.likes>0\" [matBadge]=\"post.likes\" \n                matBadgePosition=\"above after\" matBadgeColor=\"warn\"\n                matBadgeOverlap=\"false\">favorite</mat-icon>\n    </mat-card-actions>\n  </mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}